import groovy.json.JsonSlurper

defaultTasks 'build'

task clean << {
    new File('build').deleteDir()
}

task copyResourcesToBuild << {
    new File('build').mkdir()
    copy {
        from '.'
        into 'build'
        include 'manifest.json'
        include 'license.txt'
    }

    copy {
        from 'js'
        into 'build/js'
    }

    copy {
        from 'html'
        into 'build/html'
    }

    copy {
        from 'images'
        into 'build/images'
        include 'icon16.png'
        include 'icon48.png'
        include 'icon96.png'
        include 'icon128.png'
    }
}

String findVersion() {
    return new JsonSlurper().parseText(new File('manifest.json').text).version
}

task zipBuildFiles(type: Zip, dependsOn: [copyResourcesToBuild]) {
    from 'build'
    baseName 'rally-tabs'
    version findVersion()
    destinationDir new File('.')
}

task build(dependsOn: [clean, zipBuildFiles])

task version << {
    String oldVersion = findVersion()
    int newVersion = Integer.parseInt(oldVersion) + 1
    File manifestFile = new File('manifest.json')
    manifestFile.write(manifestFile.text.replaceAll('"version":\\s*"' + oldVersion + '"', '"version": "' + newVersion + '"'))
}